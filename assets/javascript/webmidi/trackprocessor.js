// Generated by CoffeeScript 1.10.0
(function() {
  this.MidiTrackProcessor = (function() {
    function MidiTrackProcessor(options) {
      if (options == null) {
        options = {};
      }
      this.options = options;
    }

    MidiTrackProcessor.prototype.processTrack = function(originalTrack) {
      var firstEventTimestamp, i, index, len, originalNote, originalTimestamp, ref, timestampDelta, track, trackStartTimestamp;
      track = JSON.parse(JSON.stringify(originalTrack));
      if (this.options.firstNoteTimestampBecomesTrackStartTimestamp) {
        firstEventTimestamp = track.orderedTimestampList[0];
        trackStartTimestamp = track.start;
        timestampDelta = firstEventTimestamp - trackStartTimestamp;
        ref = track.orderedTimestampList;
        for (index = i = 0, len = ref.length; i < len; index = ++i) {
          originalTimestamp = ref[index];
          originalNote = track.notes[originalTimestamp];
          originalNote.occurred -= timestampDelta;
          originalNote.duration -= timestampDelta;
          delete track.notes[originalTimestamp];
          track.notes[originalTimestamp - timestampDelta] = originalNote;
          track.orderedTimestampList[index] -= timestampDelta;
        }
      }
      this.quantizeLengths();
      return track;
    };

    MidiTrackProcessor.prototype.quantizeLengths = function(track) {};

    return MidiTrackProcessor;

  })();

}).call(this);

//# sourceMappingURL=trackprocessor.js.map
